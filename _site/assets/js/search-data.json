{"0": {
    "doc": "Contributing",
    "title": "How to Contribute to this Repo",
    "content": "You can use the editor on GitHub to maintain and preview the content for your website in Markdown files. Whenever you commit to this repository, GitHub Pages will run Jekyll to rebuild the pages in your site, from the content in your Markdown files. Markdown . Markdown is a lightweight and easy-to-use syntax for styling your writing. It includes conventions for . Syntax highlighted code block # Header 1 ## Header 2 ### Header 3 - Bulleted - List 1. Numbered 2. List **Bold** and _Italic_ and `Code` text [Link](url) and ![Image](src) . For more details see Basic writing and formatting syntax. ",
    "url": "http://localhost:4000/Contributing.html#how-to-contribute-to-this-repo",
    "relUrl": "/Contributing.html#how-to-contribute-to-this-repo"
  },"1": {
    "doc": "Contributing",
    "title": "Creating a new tutorial",
    "content": "A quick how-to for writing a new tutorial. | Step 1: Find the appropriate subdirectory to place it, create one if it doesn’t exist already (see instructions below). | Step 2: Create a folder for your tutorial. You will use this folder to place all resources (images / YAML files etc.). Create a markdown file in this folder (maybe with the same name as folder). | Step 3: Create the documentation using markdown. | Step 4: Linking the doc in the navigation bar. Add the following to the top of your file. You can find the by going to the directory and looking for `index.md` file. --- parent: &lt;ParentNameGoesHere&gt; --- . | . ",
    "url": "http://localhost:4000/Contributing.html#creating-a-new-tutorial",
    "relUrl": "/Contributing.html#creating-a-new-tutorial"
  },"2": {
    "doc": "Contributing",
    "title": "Creating a new Parent",
    "content": "Create a new parent if you don’t find any meaningful grouping to add your tutorial to. | Step 1: Create a root directory for the parent. eg: create a directory called linux | Step 2: Create index.md within the parent with the following content | . --- has_children: true title: &lt;MeaningfulNameHere&gt; --- . ",
    "url": "http://localhost:4000/Contributing.html#creating-a-new-parent",
    "relUrl": "/Contributing.html#creating-a-new-parent"
  },"3": {
    "doc": "Contributing",
    "title": "Contributing",
    "content": " ",
    "url": "http://localhost:4000/Contributing.html",
    "relUrl": "/Contributing.html"
  },"4": {
    "doc": "ESPHome PIR HC SR501",
    "title": "Building a cheap and reliable PIR system with ESPHome",
    "content": "This guide explains how to build a powered WiFi PIR system in your house. If you are looking to build a battery powered system, then WiFi is probably the wrong choice and you should look elsewhere. Note: If you are using the slightly expensive PaPIR, you neither need the Power supply mod nor the noise mod. Components needed . | Any ESP device | PSU for powering up ESP | PIR Sensor: HC SR501 | Ceramic capacitor: 47-220nF | . Steps . Power . | Wire your PSU to power the ESP device. If your power system is 5V, then you don’t need any additional steps since that’s the power expected from HC SR501. | However, if you are using a 3.3V power supply, you need to bypass the onboard regulator on the sensor to directly take in 3.3V input. | . Reducing noise . | HC SR501 is prone to noise and can behave erratically if the issues are not solved. Two major problems usually: ESP brings in WiFi noise and PSU noise. | First solve the WiFi noise problem since that’s more common. Solder your ceramic capacitor on pins 12-13 of the IC on the PIR sensor. | Test your setup after fixing the WiFi noise. If it is still erratic after adjusting sensitivity, then you should look at reducing the power supply noise by soldering an electrolytic capacitor on the PSU input to the sensor. Note: Multiple people have tried and failed using the PSU on Smitch bulbs, consider using an additional supply. | . Configuration files . ESPHome YAML . binary_sensor: - platform: gpio pin: number: GPIO16 inverted: false name: \"PIR Sensor\" device_class: motion . Example HA automation (Generated using Blueprint) . alias: Motion-activated Light description: '' use_blueprint: path: homeassistant/motion_light.yaml input: motion_entity: binary_sensor.pir_sensor_hall light_target: device_id: 153528f8b7ba7faa426499554bf2f015 no_motion_wait: 63 . ",
    "url": "http://localhost:4000/esphome/cheap-reliable-pir.html#building-a-cheap-and-reliable-pir-system-with-esphome",
    "relUrl": "/esphome/cheap-reliable-pir.html#building-a-cheap-and-reliable-pir-system-with-esphome"
  },"5": {
    "doc": "ESPHome PIR HC SR501",
    "title": "ESPHome PIR HC SR501",
    "content": " ",
    "url": "http://localhost:4000/esphome/cheap-reliable-pir.html",
    "relUrl": "/esphome/cheap-reliable-pir.html"
  },"6": {
    "doc": "How to add custom apps to Heimdall - The proper method",
    "title": "How to add custom apps to Heimdall - The proper method",
    "content": " ",
    "url": "http://localhost:4000/docker-and-self-hosted-apps/heimdall/heimdall-custom-apps.html",
    "relUrl": "/docker-and-self-hosted-apps/heimdall/heimdall-custom-apps.html"
  },"7": {
    "doc": "How to add custom apps to Heimdall - The proper method",
    "title": "What is Heimdall?",
    "content": "Heimdall is a self-hosted personal dashboard. It acts as a dashboard that hosts links to all your self-hosted, or online apps and app instances. See the screenshot bellow to get an idea. ",
    "url": "http://localhost:4000/docker-and-self-hosted-apps/heimdall/heimdall-custom-apps.html#what-is-heimdall",
    "relUrl": "/docker-and-self-hosted-apps/heimdall/heimdall-custom-apps.html#what-is-heimdall"
  },"8": {
    "doc": "How to add custom apps to Heimdall - The proper method",
    "title": "Why Do You Need This?",
    "content": "Heimdall comes preloaded with many foundation and enhanced apps. However, one may find that not all apps are there. Not to worry. There is a huge community supporting ongoing development of Heimdall, and some of them have been kind enough to make their own versions of apps, which are not available in Heimdall out of the box. We can easily make them available in Heimdall with a few lines of commands . NOTE: This guide is only applicable to the docker installation. You may adapt the steps in a normal installation too. The official installation offers many apps for the dashboard, but there are numerous more, developed by the community. These apps can be added by following this method. Heimdall Home Page . For this guide, I will use the example of Omada SDN Controller. First, go to Heimdall App Request List and check if the desired app is available in the page. NOTE: Only apps made avaiable in this page can be used with this method. ",
    "url": "http://localhost:4000/docker-and-self-hosted-apps/heimdall/heimdall-custom-apps.html#why-do-you-need-this",
    "relUrl": "/docker-and-self-hosted-apps/heimdall/heimdall-custom-apps.html#why-do-you-need-this"
  },"9": {
    "doc": "How to add custom apps to Heimdall - The proper method",
    "title": "Steps",
    "content": ". | Locate the app and ownload the file; let’s take the example of Omada. You will see two columns with names of Foundation App and Enhanced App. Right click on the link, copy link, and use: . wget https://apps.heimdall.site/request/enhanced/aeddfb31b642e8e30591a99b3b3c30b8a765be32 . | Now, unzip the file. unzip OmadaSDNController.zip . | Transfer the file to docker-data path. In your case case, this is home/seetendra/docker_volumes/heimdall/config/www/SupportedApps - You can use a samba share or use terminal. In terminal, you can use the cp command. e.g., . sudo cp -r OmadaSDNController docker_volumes/heimdall/config/www/SupportedApps/OmadaSDNController . This has to go to the docker path of Heimdall. In may case, it is stored in my Home Folder -&gt; docker_volumes folder . | Once the folder is added to the supported apps folder in Heimdall, lets get inside the container. Either use Portainer to get inside the container, or use terminal to do so. E.g., . docker exec -it heimdall /bin/bash . Alternatively, you can use Portainer to get inside the container . | And then do the following to change to the heimdall core directory inside docker: . cd /var/www/localhost/heimdall/ . | Next, we need to create a new folder. We need to use the folder name, exactly as the original file name. Here, it is OmadaSDNController . php artisan register:app OmadaSDNController . | That’s about it. Now, you can head over to Heimdall and add this app from the drop down list. It should show up in the drop down. | . ",
    "url": "http://localhost:4000/docker-and-self-hosted-apps/heimdall/heimdall-custom-apps.html#steps",
    "relUrl": "/docker-and-self-hosted-apps/heimdall/heimdall-custom-apps.html#steps"
  },"10": {
    "doc": "NVR",
    "title": "NVR",
    "content": "All NVR / Surveillance / Object and motion detection related posts . ",
    "url": "http://localhost:4000/nvr-and-surveillance/",
    "relUrl": "/nvr-and-surveillance/"
  },"11": {
    "doc": "Debugging",
    "title": "Debugging",
    "content": " ",
    "url": "http://localhost:4000/debugging/",
    "relUrl": "/debugging/"
  },"12": {
    "doc": "ESPHome",
    "title": "ESPHome",
    "content": "All ESPHome related posts . ",
    "url": "http://localhost:4000/esphome/",
    "relUrl": "/esphome/"
  },"13": {
    "doc": "Docker",
    "title": "Docker",
    "content": " ",
    "url": "http://localhost:4000/docker-and-self-hosted-apps/",
    "relUrl": "/docker-and-self-hosted-apps/"
  },"14": {
    "doc": "HomeAssistant",
    "title": "HomeAssistant",
    "content": " ",
    "url": "http://localhost:4000/homeassistant/",
    "relUrl": "/homeassistant/"
  },"15": {
    "doc": "Tracking",
    "title": "Tracking",
    "content": "All posts related to tracking: Indoor / Outdoor . ",
    "url": "http://localhost:4000/tracking/",
    "relUrl": "/tracking/"
  },"16": {
    "doc": "Home",
    "title": "Welcome to Home automation India resources",
    "content": " ",
    "url": "http://localhost:4000/#welcome-to-home-automation-india-resources",
    "relUrl": "/#welcome-to-home-automation-india-resources"
  },"17": {
    "doc": "Home",
    "title": "Home",
    "content": " ",
    "url": "http://localhost:4000/",
    "relUrl": "/"
  },"18": {
    "doc": "ESPHome PaPIR",
    "title": "Building a reliable PIR Sensor with ESPHome and Panasonic PIR",
    "content": "This guide explains how to build a pir sensor with a highly reliable Panasonic PIR sensors. This is an example sensor used throughout this guide: . Note: Make sure you use 3.3V input on the PaPir, in order to avoid damage to the D1 Mini . ",
    "url": "http://localhost:4000/esphome/Panasonic%20PIR/panasonic-pir.html#building-a-reliable-pir-sensor-with-esphome-and-panasonic-pir",
    "relUrl": "/esphome/Panasonic%20PIR/panasonic-pir.html#building-a-reliable-pir-sensor-with-esphome-and-panasonic-pir"
  },"19": {
    "doc": "ESPHome PaPIR",
    "title": "Components Needed",
    "content": ". | D1 Mini, or any ESP8266 Chip/Board | Panasonic PIR | Power Supply (any HLK or a mobile charger) | . Panasonic PIR . ",
    "url": "http://localhost:4000/esphome/Panasonic%20PIR/panasonic-pir.html#components-needed",
    "relUrl": "/esphome/Panasonic%20PIR/panasonic-pir.html#components-needed"
  },"20": {
    "doc": "ESPHome PaPIR",
    "title": "Steps",
    "content": "Powering your Sensor . | Use either 5V or 3.3V connectors with D1 Mini | With a D1 Mini, it is recomended to power the system through D1 Mini’s USB port. | Connect the PaPIR only from 3V (from the D1 Mini), so that its output signal will remain within the 3V tolerance | . Connecting the Sensor . | Connect the output pin of PaPIR to D0 of the ESP8266, or D1 Mini - this instruction is specific to ESP8266 | Connect the VCC on the PIR to 3.3V of D1 Mini or another 3.3V power source if you have available | Connect the GND pin of the PIR to G | . ESPHome Configuration . | This configuration makes use of the pinmode INPUT_PULLDOWN_16, which is a special pulldown mode used with D0 (GPIO16) on ESP8266 chips. | The configuration adds a 20 second delay in reporting a clear since for usability purposes. You can delete this, increase, or decrease the delay as per your needs | . ESPHome YAML . binary_sensor: - platform: gpio id: my_motion name: \"Panasonic Motion Sensor\" pin: number: 16 inverted: false mode: INPUT_PULLDOWN_16 device_class: motion filters: - delayed_off: 20s . ",
    "url": "http://localhost:4000/esphome/Panasonic%20PIR/panasonic-pir.html#steps",
    "relUrl": "/esphome/Panasonic%20PIR/panasonic-pir.html#steps"
  },"21": {
    "doc": "ESPHome PaPIR",
    "title": "Trouble Shooting",
    "content": ". | The Panasonic PIR Sensor implementation is pretty straight forward | If you have problems connecting with the sensor, double check connections and pins. | Sensor pin with plated or covered/sealed base is GND | Double check if Sensor’s VCC and Signal/OUT is switched | INPUT_PULLDOWN_16 only works with GPIO16, or D0 | . ",
    "url": "http://localhost:4000/esphome/Panasonic%20PIR/panasonic-pir.html#trouble-shooting",
    "relUrl": "/esphome/Panasonic%20PIR/panasonic-pir.html#trouble-shooting"
  },"22": {
    "doc": "ESPHome PaPIR",
    "title": "ESPHome PaPIR",
    "content": " ",
    "url": "http://localhost:4000/esphome/Panasonic%20PIR/panasonic-pir.html",
    "relUrl": "/esphome/Panasonic%20PIR/panasonic-pir.html"
  },"23": {
    "doc": "PZEM-004T Power Monitoring",
    "title": "How to monitor electricity consumption with PZEM-004T",
    "content": " ",
    "url": "http://localhost:4000/esphome/esphome-power-monitoring-pzem004t/power-monitoring-pzem004t.html#how-to-monitor-electricity-consumption-with-pzem-004t",
    "relUrl": "/esphome/esphome-power-monitoring-pzem004t/power-monitoring-pzem004t.html#how-to-monitor-electricity-consumption-with-pzem-004t"
  },"24": {
    "doc": "PZEM-004T Power Monitoring",
    "title": "Why Do You Need This?",
    "content": " ",
    "url": "http://localhost:4000/esphome/esphome-power-monitoring-pzem004t/power-monitoring-pzem004t.html#why-do-you-need-this",
    "relUrl": "/esphome/esphome-power-monitoring-pzem004t/power-monitoring-pzem004t.html#why-do-you-need-this"
  },"25": {
    "doc": "PZEM-004T Power Monitoring",
    "title": "PZEM-004T Power Monitoring",
    "content": " ",
    "url": "http://localhost:4000/esphome/esphome-power-monitoring-pzem004t/power-monitoring-pzem004t.html",
    "relUrl": "/esphome/esphome-power-monitoring-pzem004t/power-monitoring-pzem004t.html"
  },"26": {
    "doc": "Remotely access your home assistant instance for free",
    "title": "Remotely access your home assistant instance for free",
    "content": "Note: If you can afford and are willing to support HomeAssistant development, consider using a subscription to Nabu Casa which provides you Remote access + Alexa / Google Assistant support for $5 / month. Only remote access . You can simply use a private VPN setup to have access to your instance. No open ports needed on your network. | ZeroTier: https://www.zerotier.com/ | TailScale: https://tailscale.com/ | . If you have a public IP, you can also build your own VPN network using something like OpenVPN: https://openvpn.net/ . Only Alexa / Google Assistant . NodeRed - TBD . Remote access + Alexa / Google Assistant . The best way to have both is to have your instance exposed to the internet: . | If you have a public IP, then you can simply open relevant ports on your network and use your IP. | Most ISPs in India will not provide you a public IP, so you require to build a tunnel from the internet to your instance. | . Tunneling options . | Dataplicity (Disadvantage: No E2E TLS, Dataplicity folks can see your data) | nGrok (Disadvantage: URL changes everytime your tunnel stops - Restarts / Internet losses) | Pagekite (Disadvantage: You need to request for trial extension every month) | DIY: Use a free VPS with Tunnelling | . ",
    "url": "http://localhost:4000/homeassistant/remote-access/remote-access-free.html",
    "relUrl": "/homeassistant/remote-access/remote-access-free.html"
  },"27": {
    "doc": "Why?",
    "title": "Why?",
    "content": ". | Self host your location data rather than giving it to Google. | Draw beautiful maps of your journeys | Detect thefts of your vehicle, Know details of usage after you lend it to someone. | . ",
    "url": "http://localhost:4000/tracking/vehicle-tracking-st901-traccar/vehicle-tracking-st901-traccar.html",
    "relUrl": "/tracking/vehicle-tracking-st901-traccar/vehicle-tracking-st901-traccar.html"
  },"28": {
    "doc": "Why?",
    "title": "How?",
    "content": "Vehicle tracking with ST901 tracker and open source server running Traccar. Blog . ",
    "url": "http://localhost:4000/tracking/vehicle-tracking-st901-traccar/vehicle-tracking-st901-traccar.html#how",
    "relUrl": "/tracking/vehicle-tracking-st901-traccar/vehicle-tracking-st901-traccar.html#how"
  },"29": {
    "doc": "ZoneMinder",
    "title": "ZoneMinder",
    "content": "Zoneminder is a long runnng reliable project for setting up NVR. Installation . Docker is the easiest way to setup ZoneMinder. docker-compose.yaml . zoneminder: container_name: zoneminder image: dlandon/zoneminder:latest restart: 'no' shm_size: '1gb' ports: - 8443:443/tcp - 9000:9000/tcp network_mode: \"bridge\" environment: - TZ=Asia/Kolkata - SHMEM=50% - PUID=99 - PGID=100 - INSTALL_HOOK=0 - INSTALL_FACE=0 - INSTALL_TINY_YOLOV3=1 - INSTALL_YOLOV3=1 - INSTALL_TINY_YOLOV4=1 - INSTALL_YOLOV4=1 - MULTI_PORT_START=0 - MULTI_PORT_END=0 volumes: - ./config:/config:rw - ./data:/var/cache/zoneminder:rw . Home Assistant integration . Home Assistant supports Native camera integration with ZoneMinder cameras. Add this to your configuration.yaml . zoneminder: host: &lt;URL&gt;:&lt;PORT&gt; verify_ssl: false ssl: true camera: - platform: zoneminder . Now you can add all your cameras to your lovelace dashboard. Detecting Camera events on ZoneMinder . The ZoneMinder docker install ships with EventServer notificiation system which can be used to generate events. Setup your EventServer by editing the file in the /config folder: Documentation Reference . Getting events on ZMNinja App . The above config is sufficient to receive notifications on ZMNinja. Notifications still work when you are not in the same network but you will need to use ZeroTier / Tailscale / Publicly accessible ZoneMinder instance when you open the app. Getting events on Home Assistant (MQTT) . | Getting MQTT to work requires additional installation of MQTT Perl libraries. Log into the docker instance using docker exec --it &lt;container_name&gt; /bin/bash | Install the library perl -MCPAN -e \"install Net::MQTT::Simple\". You might see an error saying make not found, you might need to install it first using apt install make | Enable MQTT in the configuration file: Reference documentation | Now you can create sensors using the MQTT information publised by ZoneMinder. For instance, create a Motion detection sensor using | . binary_sensor: - platform: mqtt state_topic: \"zoneminder/1\" name: ZM camera value_template: ' OFF ' device_class: motion . ",
    "url": "http://localhost:4000/nvr-and-surveillance/zoneminder/zoneminder.html",
    "relUrl": "/nvr-and-surveillance/zoneminder/zoneminder.html"
  }
}
